name: Download and Cache Packages

on:
  push:
    branches:
      - main

jobs:
  download_and_cache_packages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create directories
        run: |
          mkdir -p downloaded_packages
          mkdir -p cached_packages

      - name: Download packages if not cached
        id: download_packages
        run: |
          if [ ! -f "cached_packages/hybrisServer-Platform.zip" ] || \
             [ ! -f "cached_packages/hybrisServer-AllExtensions.zip" ] || \
             [ ! -f "cached_packages/jacoco.tgz" ]; then
            echo "Downloading packages..."
            curl -s -H "X-JFrog-Art-Api:${{ secrets.JFROG_API_KEY }}" -o downloaded_packages/hybrisServer-Platform.zip "https://artifacts.i.mercedes-benz.com/artifactory/dcp-sap-generic-releases/atcpps-custom-sap-hybris/2211/cicd.03/hybrisServer-Platform.zip"
            curl -s -H "X-JFrog-Art-Api:${{ secrets.JFROG_API_KEY }}" -o downloaded_packages/hybrisServer-AllExtensions.zip "https://artifacts.i.mercedes-benz.com/artifactory/dcp-sap-generic-releases/atcpps-custom-sap-hybris/2211/cicd.05/hybrisServer-AllExtensions.zip"
            curl -s -H "X-JFrog-Art-Api:${{ secrets.JFROG_API_KEY }}" -o downloaded_packages/jacoco.tgz "https://artifacts.i.mercedes-benz.com/artifactory/dcp-sap-generic-releases/atcpps-custom-sap-hybris/2211/cicd/jacoco.tgz"
            mv downloaded_packages/* cached_packages/
          fi

      - name: Cache downloaded packages
        if: steps.download_packages.run.outputs.stdout != ''
        uses: actions/cache@v2
        with:
          path: cached_packages
          key: ${{ runner.os }}-${{ hashFiles('cached_packages/**') }}

      # Continue with your workflow using these downloaded packages
